<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>security-command-side</artifactId>
    <groupId>com.yunwoo.cybershop</groupId>
    <version>1.0-SNAPSHOT</version>
    <name>member-command-side</name>

    <!-- Spring Boot 启动父依赖 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.0.RELEASE</version>
    </parent>

    <properties>
        <dubbo-spring-boot>1.0.0</dubbo-spring-boot>
    </properties>
    <profiles>
        <profile>
            <id>local</id>
            <properties>
                <spring.dubbo.registry.address>zookeeper://127.0.0.1:2181</spring.dubbo.registry.address>
                <spring.data.mongodb.uri>mongodb://127.0.0.1:27017</spring.data.mongodb.uri>
                <mq.address>127.0.0.1:5672</mq.address>
                <mq.username>guest</mq.username>
                <mq.password>guest</mq.password>
                <db.url>jdbc:mysql://127.0.0.1:3306/cybershop?characterEncoding=utf8</db.url>
                <db.username>root</db.username>
                <db.password>root1234</db.password>
            </properties>
        </profile>
        <profile>
            <id>dev</id>
            <properties>
                <spring.dubbo.registry.address>zookeeper://node2:2181</spring.dubbo.registry.address>
                <spring.data.mongodb.uri>mongodb://node3:27017</spring.data.mongodb.uri>
                <mq.address>node1:5672</mq.address>
                <mq.username>guest</mq.username>
                <mq.password>guest</mq.password>
                <db.url>jdbc:mysql://node3:3306/security?characterEncoding=utf8</db.url>
                <db.quartz.url>jdbc:mysql://node3:3306/quartz?characterEncoding=utf8</db.quartz.url>
                <db.username>root</db.username>
                <db.password>root1234</db.password>
            </properties>
            <activation><activeByDefault>true</activeByDefault></activation>
        </profile>
        <profile>
            <id>pro</id>
            <properties>
                <spring.dubbo.registry.address>zookeeper://127.0.0.1:2181</spring.dubbo.registry.address>
                <spring.data.mongodb.uri>mongodb://127.0.0.1:27017</spring.data.mongodb.uri>
                <mq.address>127.0.0.1:5672</mq.address>
                <mq.username>guest</mq.username>
                <mq.password>guest</mq.password>
                <db.url>jdbc:mysql://127.0.0.1:3306/cybershop?characterEncoding=utf8</db.url>
                <db.username>root</db.username>
                <db.password>root1234</db.password>
            </properties>
        </profile>
    </profiles>
    <repositories>
        <repository>
            <id>clojars.org</id>
            <url>http://clojars.org/repo</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </repository>
    </repositories>
    <dependencies>

        <!-- Spring Boot Dubbo 依赖 -->
        <dependency>
            <groupId>io.dubbo.springboot</groupId>
            <artifactId>spring-boot-starter-dubbo</artifactId>
            <version>${dubbo-spring-boot}</version>
        </dependency>
        <!-- Spring Boot Web 依赖 -->
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-web</artifactId>-->
        <!--</dependency>-->

         <!--Spring Boot Test 依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.12</version>
        </dependency>
        <dependency>
            <groupId>com.yunwoo.cybershop</groupId>
            <artifactId>security-api</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.yunwoo.cybershop</groupId>
            <artifactId>common</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.yunwoo.cybershop</groupId>
            <artifactId>messaging</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.14.8</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.axonframework</groupId>
            <artifactId>axon-mongo</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>org.axonframework</groupId>
            <artifactId>axon-amqp</artifactId>
            <version>2.4.4</version>
        </dependency>
        <!-- mq -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>1.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.1.7</version>
        </dependency>
        <!-- quartz 持久化 -->
        <dependency>
            <groupId>com.novemberain</groupId>
            <artifactId>quartz-mongodb</artifactId>
            <version>1.9.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.0.26</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>

    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- 资源文件插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <!-- 过滤后缀为p12的证书文�? <nonFilteredFileExtensions> <nonFilteredFileExtension>p12</nonFilteredFileExtension>
                        </nonFilteredFileExtensions> -->
                </configuration>
            </plugin>
        </plugins>
        <!-- 源码目录管理 -->
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <!-- 增加过滤 -->
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
    </build>
</project>
